{"version":3,"sources":["components/pagination.js","App.js","reportWebVitals.js","index.js"],"names":["Pagination","props","useState","offset","setOffset","data","setData","perPage","pageCount","setPageCount","useEffect","postData","slice","map","university","index","style","textAlign","name","paddingLeft","domains","Math","ceil","length","getData","Table","striped","bordered","hover","size","paddingRight","className","display","justifyContent","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","subContainerClassName","activeClassName","axios","require","App","value","setValue","resp","setResp","options","useMemo","countryList","onChange","console","log","label","splice","x","i","uri","get","then","response","temp","concat","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4580f1a5.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport ReactPaginate from 'react-paginate';\nimport './pagination.css'\nimport Table from 'react-bootstrap/Table'\n\nfunction Pagination(props) {\n\n    const [offset, setOffset] = useState(0);\n    const [data, setData] = useState([]);   \n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0) \n\n    const getData = () => {\n        const data = props.data;\n        const slice = data.slice(offset, offset + perPage)\n        const postData = slice.map((university, index) => { \n            return (\n                <tr key={index}>\n                    <td style={{textAlign:'center'}}>{index+1}</td>\n                    <td>{university.name}</td>\n                    <td style={{paddingLeft:'65px'}}>{university.domains[0]}</td>\n                </tr> \n            )\n        })\n        setData(postData)\n        setPageCount(Math.ceil(data.length / perPage))\n    }\n\n    // const header = () => {\n    //     return (\n    //       <tr>\n    //         <th> S.No </th>\n    //         <th> University Name </th>\n    //         <th> Domain Name </th>\n    //       </tr>\n    //     )\n    // }\n\n    useEffect(() => {\n        getData()\n    }, [offset])\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        setOffset(selectedPage + 1)\n    };\n\n    return (\n        <div>\n            <Table striped bordered hover size=\"sm\">\n               <thead> \n                    <tr>\n                        <th> S.No </th>\n                        <th style={{paddingRight:'150px'}}> University Name </th>\n                        <th style={{paddingLeft:'75px'}}> Domain Name </th>\n                    </tr>\n                </thead>\n\n               <tbody>  \n                    {data}\n                </tbody>\n                </Table>\n                <div className=\"pagination\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n                        <ReactPaginate\n                            style={{ display: \"flex\", justifyContent: \"center\" }}\n                            previousLabel={\"prev\"}\n                            nextLabel={\"next\"}\n                            breakLabel={\"...\"}\n                            breakClassName={\"break-me\"}\n                            pageCount={pageCount}\n                            marginPagesDisplayed={2}\n                            pageRangeDisplayed={5}\n                            onPageChange={handlePageClick}\n                            containerClassName={\"pagination\"}\n                            subContainerClassName={\"pages pagination\"}\n                            activeClassName={\"active\"}/>\n                    </div>\n\n         </div>\n    )\n} \n\nexport default Pagination ","import React, { useState, useMemo } from 'react'\nimport Select from 'react-select'\nimport countryList from 'react-select-country-list'\nimport Pagination from './components/pagination';\nconst axios = require('axios');\n\nconst url = 'http://universities.hipolabs.com/search?country='\n\nfunction App() {\n  const [value, setValue] = useState('')\n  const [resp, setResp] = useState([]);\n  const options = useMemo(() => countryList().getData(), []) \n\n  const changeHandler = value => { \n    console.log(`Option selected:`, value.label) ;  \n    resp.splice(0, resp.length)    \n    var x = '' ;\n\n    for (var i = 0; i < value.label.length; i++) \n    if(value.label[i] === ' ') x += '+' ; \n    else x += value.label[i] ;\n\n    const uri = url + x\n\n    axios.get(uri)\n    .then(function (response) { \n      var temp = resp.concat(response.data) \n      setResp(temp) ; \n    })\n    .catch(function (error) {\n      console.log(error);\n    }) ;\n    setValue(value) \n  }\n\n  return (\n    <div>  \n      <div> \n        <h2 style={{textAlign:'center'}}> Countrywise Universities list with its domains </h2>\n      </div>\n     {value === '' ? (<h1 style={{textAlign:'center'}}> Select a Country </h1>) : ''}\n      <Select options={options} value={value} onChange={changeHandler} />\n      {value !== '' ? (<h1 style={{textAlign:'center'}}> Country : {value.label} </h1>) : ''} \n      {value !== '' && resp.length === 0 && <h2 style={{textAlign:'center'}}> No Results Found </h2>}\n      {resp.length !== 0 &&  <Pagination data = {resp} /> }\n    </div>\n  )\n  \n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}